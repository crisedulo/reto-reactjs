{"version":3,"sources":["Componentes/Header.js","Componentes/ElementoLista.js","Componentes/Lista.js","Componentes/Content.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Navbar_default","bg","variant","Brand","href","src","width","height","alt","Nav_default","Link","Dropdown_default","Toggle","text-color","id","Menu","Item","ElementoLista","_this$props$list","this","props","list","title","basePrice","capacityOfPeople","address","noBathroom","noBedroom","mainPicture","Card_default","style","Img","urlPhoto","Body","Title","Text","realAddress","Button_default","Component","Lista","_this","Form_default","Group","controlId","Label","Control","type","placeholder","Object","keys","items","map","item","Componentes_ElementoLista","key","Content","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","_this2","axios","get","then","res","setState","data","_this3","react_router_dom","react_router","exact","path","render","Componentes_Lista","App","Componentes_Header","Componentes_Content","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3266cb9.chunk.js","sourcesContent":["import React from \"react\"\r\nimport '../index.css'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"Navegacion\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n          <img\r\n                src=\"/colab.png\"\r\n                width=\"110\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n                alt = \"Logo-Colab\"\r\n              \r\n            />\r\n          <Nav className=\"mr-auto ml-4\">\r\n            <Nav.Link href=\"#home\">Accommodations</Nav.Link>\r\n            <Nav.Link href=\"#features\">Transportation</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Things To Go</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Tours Info</Nav.Link>\r\n          </Nav>\r\n          <Dropdown>\r\n            <Dropdown.Toggle  variant = \"dark\" text-color=\"white\" bg=\"dark\" id=\"dropdown-basic\">\r\n                More Info\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item href=\"#\">Get Oferts</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">Social Media</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\">Contact</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Navbar>\r\n        </div>\r\n    );\r\n  }\r\n  export default Header;\r\n  ","import React, {Component} from \"react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ElementoLista extends Component {\r\n   \r\n    render() {\r\n        const { title, basePrice, capacityOfPeople, address, noBathroom, noBedroom, mainPicture } = this.props.list\r\n        return (\r\n            \r\n            <div className = \"Carta\">\r\n                \r\n                   <Card style={{ width: '18rem' }}>\r\n                    <Card.Img variant=\"top\" src={mainPicture.urlPhoto} />\r\n                    <Card.Body>\r\n                        <Card.Title>{title}</Card.Title>\r\n                        <Card.Text>\r\n                            Ubicacion: {address.realAddress}<br></br>\r\n                            Capacidad de personas: {capacityOfPeople}<br></br>\r\n                            Numero de Ba√±os: {noBathroom}<br></br>\r\n                            Cantidad de habitaciones: {noBedroom}<br></br>\r\n                        </Card.Text>\r\n                        <Button variant=\"primary\">Precio ${basePrice}</Button>\r\n                    </Card.Body>\r\n                    </Card>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\nexport default ElementoLista","import React, {Component} from 'react';\r\nimport ElementoLista from \"./ElementoLista\"\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass Lista extends Component{\r\n    \r\n    render(){\r\n        return (\r\n            <div className=\"Lista\">\r\n                <div className=\"Buscador\">\r\n                <Form>\r\n                    <div className =\"Elemento\">\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>The best Accommodations</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Search for destination in Guatemala\" />\r\n                    <Form.Text className=\"text-muted\">\r\n                    </Form.Text>\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Search\r\n                </Button>\r\n                </div>\r\n                </Form>\r\n                </div>\r\n                {Object.keys(this.props.items).map(item => (\r\n                    <ElementoLista \r\n                        list={this.props.items[item]}\r\n                        key={item}\r\n                    />\r\n                ))}\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n     \r\nexport default Lista","import React, {Component} from \"react\"\r\nimport Lista from \"./Lista\"\r\nimport axios from 'axios'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            items:[]\r\n        }\r\n    } \r\n    componentDidMount() {\r\n        axios.get(\"https://viaguate-10-backend-cliente.mybluemix.net/api/accommodation/ViewVacationrentals\")\r\n        .then(res => {\r\n            this.setState({\r\n                 items: res.data\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                    <div className=\"Lista-General\">\r\n                         <Switch>\r\n                              <Route exact path=\"/\" render={() => {\r\n                                   return(\r\n                                        <Lista\r\n                                        items={this.state.items}\r\n                                        />\r\n                                   )\r\n                              } } />\r\n                        </Switch>\r\n                    </div>\r\n               </BrowserRouter>\r\n        )\r\n    }\r\n}\r\nexport default Content","import React from 'react';\nimport Header from \"./Componentes/Header\";\nimport Content from \"./Componentes/Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header/>\n     <Content/>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}